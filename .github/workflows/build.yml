name: Build [PR and non-mainline branches]
on:
  pull_request:
    branches: main
  push:
    branches:
      - '!main'
      - 'feature/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write

    steps:
      - uses: actions/checkout@v4
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}  # Needed to get PR information, if any
        with:
          ref: ${{ github.head_ref }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Branch name
        run: echo running on branch ${GITHUB_REF#refs/heads/}

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Test
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}  # Needed to get PR information, if any
        run: mvn clean install

      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=sddevelopment-be_modular-validators

      - name: Generate JavaDocs
        run: mvn javadoc:javadoc
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}  # Needed to get PR information, if any

      - name: Commit JavaDocs
        uses: stefanzweifel/git-auto-commit-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}  # Needed to get PR information, if any
        with:
          file_pattern: 'docs/*'
          commit_message: 'Update documentation'
          disable_globbing: true